class Solution {
public:
    int largestInteger(vector<int>& nums, int k) {
        unordered_map<int, int> freq;
        int n = nums.size();
        
        for (int i = 0; i <= n - k; i++) {
            unordered_set<int> seen;
            for (int j = i; j < i + k; j++) {
                if (seen.insert(nums[j]).second) {
                    freq[nums[j]]++;
                }
            }
        }
        
        int largest = -1;
        for (auto& x : freq) {
            if (x.second == 1) {
                largest = max(largest, x.first);
            }
        }
        
        return largest;
    }
};
